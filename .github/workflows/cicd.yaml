name: CICD pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run SonarQube scanner
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_URL }}
        with:
          args: >
            -Dsonar.projectKey=my-app-repo
            -Dsonar.projectName="My App Repo"

      - name: Build Docker image
        run: docker build -t my-app-repo .

  security-check:
    runs-on: self-hosted
    needs: build-and-deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget curl gnupg lsb-release
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo tee /etc/apt/keyrings/trivy.asc
          echo "deb [signed-by=/etc/apt/keyrings/trivy.asc] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy
      

      - name: Run Trivy Scan
        run: trivy fs --format json -o fs-report.json .

      - name: Install Gitleaks
        run: sudo apt install gitleaks -y

      - name: Run Gitleaks Code Scan
        run: gitleaks detect --source . --verbose --redact --report-format=json --report-path=gitleaks-report.json

      - name: Run SonarQube scanner
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_URL }}
        with:
          args: >
            -Dsonar.projectKey=my-app-repo
            -Dsonar.projectName="My App Repo"
            -Dsonar.coverage.jacoco.xmlReportPaths=path/to/jacoco.xml
      
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to Amazon ECR
        run: |
          docker tag my-app-repo:latest ${{ secrets.ECR_REPOSITORY_URL }}/my-app-repo:latest
          docker push ${{ secrets.ECR_REPOSITORY_URL }}/my-app-repo:latest
